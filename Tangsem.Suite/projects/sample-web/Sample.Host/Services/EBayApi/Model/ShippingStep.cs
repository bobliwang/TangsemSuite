/* 
 * Fulfillment API
 *
 * Use the Fulfillment API to complete the process of packaging, addressing, handling, and shipping each order on behalf of the seller, in accordance with the payment method and timing specified at checkout.
 *
 * OpenAPI spec version: v1.8.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// This type contains shipping information for a fulfillment, including the shipping carrier, the shipping service option, the shipment destination, and the Global Shipping Program reference ID.
    /// </summary>
    [DataContract]
    public partial class ShippingStep :  IEquatable<ShippingStep>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ShippingStep" /> class.
        /// </summary>
        /// <param name="shippingCarrierCode">The unique identifier of the shipping carrier being used to ship the line item. Note: The Trading API&#39;s GeteBayDetails call can be used to retrieve the latest shipping carrier and shipping service option enumeration values..</param>
        /// <param name="shippingServiceCode">The unique identifier of the shipping service option being used to ship the line item. Note: Use the Trading API&#39;s GeteBayDetails call to retrieve the latest shipping carrier and shipping service option enumeration values. When making the GeteBayDetails call, include the DetailName field in the request payload and set its value to ShippingServiceDetails. Each valid shipping service option (returned in ShippingServiceDetails.ShippingService field) and corresponding shipping carrier (returned in ShippingServiceDetails.ShippingCarrier field) is returned in response payload..</param>
        /// <param name="shipTo">shipTo.</param>
        /// <param name="shipToReferenceId">This is the unique identifer of the Global Shipping Program (GSP) shipment. This field is only returned if the line item is being shipped via GSP (the value of the fulfillmentStartInstructions.ebaySupportedFulfillment field will be true. The international shipping provider uses the shipToReferenceId value as the primary reference number to retrieve the relevant details about the buyer, the order, and the fulfillment, so the shipment can be completed. Sellers must include this value on the shipping label immediately above the street address of the international shipping provider. Example: &amp;quot;Reference #1234567890123456&amp;quot; Note: This value is the same as the ShipToAddress.ReferenceID value returned by the Trading API&#39;s GetOrders call..</param>
        public ShippingStep(string shippingCarrierCode = default(string), string shippingServiceCode = default(string), ExtendedContact shipTo = default(ExtendedContact), string shipToReferenceId = default(string))
        {
            this.ShippingCarrierCode = shippingCarrierCode;
            this.ShippingServiceCode = shippingServiceCode;
            this.ShipTo = shipTo;
            this.ShipToReferenceId = shipToReferenceId;
        }
        
        /// <summary>
        /// The unique identifier of the shipping carrier being used to ship the line item. Note: The Trading API&#39;s GeteBayDetails call can be used to retrieve the latest shipping carrier and shipping service option enumeration values.
        /// </summary>
        /// <value>The unique identifier of the shipping carrier being used to ship the line item. Note: The Trading API&#39;s GeteBayDetails call can be used to retrieve the latest shipping carrier and shipping service option enumeration values.</value>
        [DataMember(Name="shippingCarrierCode", EmitDefaultValue=false)]
        public string ShippingCarrierCode { get; set; }

        /// <summary>
        /// The unique identifier of the shipping service option being used to ship the line item. Note: Use the Trading API&#39;s GeteBayDetails call to retrieve the latest shipping carrier and shipping service option enumeration values. When making the GeteBayDetails call, include the DetailName field in the request payload and set its value to ShippingServiceDetails. Each valid shipping service option (returned in ShippingServiceDetails.ShippingService field) and corresponding shipping carrier (returned in ShippingServiceDetails.ShippingCarrier field) is returned in response payload.
        /// </summary>
        /// <value>The unique identifier of the shipping service option being used to ship the line item. Note: Use the Trading API&#39;s GeteBayDetails call to retrieve the latest shipping carrier and shipping service option enumeration values. When making the GeteBayDetails call, include the DetailName field in the request payload and set its value to ShippingServiceDetails. Each valid shipping service option (returned in ShippingServiceDetails.ShippingService field) and corresponding shipping carrier (returned in ShippingServiceDetails.ShippingCarrier field) is returned in response payload.</value>
        [DataMember(Name="shippingServiceCode", EmitDefaultValue=false)]
        public string ShippingServiceCode { get; set; }

        /// <summary>
        /// Gets or Sets ShipTo
        /// </summary>
        [DataMember(Name="shipTo", EmitDefaultValue=false)]
        public ExtendedContact ShipTo { get; set; }

        /// <summary>
        /// This is the unique identifer of the Global Shipping Program (GSP) shipment. This field is only returned if the line item is being shipped via GSP (the value of the fulfillmentStartInstructions.ebaySupportedFulfillment field will be true. The international shipping provider uses the shipToReferenceId value as the primary reference number to retrieve the relevant details about the buyer, the order, and the fulfillment, so the shipment can be completed. Sellers must include this value on the shipping label immediately above the street address of the international shipping provider. Example: &amp;quot;Reference #1234567890123456&amp;quot; Note: This value is the same as the ShipToAddress.ReferenceID value returned by the Trading API&#39;s GetOrders call.
        /// </summary>
        /// <value>This is the unique identifer of the Global Shipping Program (GSP) shipment. This field is only returned if the line item is being shipped via GSP (the value of the fulfillmentStartInstructions.ebaySupportedFulfillment field will be true. The international shipping provider uses the shipToReferenceId value as the primary reference number to retrieve the relevant details about the buyer, the order, and the fulfillment, so the shipment can be completed. Sellers must include this value on the shipping label immediately above the street address of the international shipping provider. Example: &amp;quot;Reference #1234567890123456&amp;quot; Note: This value is the same as the ShipToAddress.ReferenceID value returned by the Trading API&#39;s GetOrders call.</value>
        [DataMember(Name="shipToReferenceId", EmitDefaultValue=false)]
        public string ShipToReferenceId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ShippingStep {\n");
            sb.Append("  ShippingCarrierCode: ").Append(ShippingCarrierCode).Append("\n");
            sb.Append("  ShippingServiceCode: ").Append(ShippingServiceCode).Append("\n");
            sb.Append("  ShipTo: ").Append(ShipTo).Append("\n");
            sb.Append("  ShipToReferenceId: ").Append(ShipToReferenceId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ShippingStep);
        }

        /// <summary>
        /// Returns true if ShippingStep instances are equal
        /// </summary>
        /// <param name="input">Instance of ShippingStep to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ShippingStep input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.ShippingCarrierCode == input.ShippingCarrierCode ||
                    (this.ShippingCarrierCode != null &&
                    this.ShippingCarrierCode.Equals(input.ShippingCarrierCode))
                ) && 
                (
                    this.ShippingServiceCode == input.ShippingServiceCode ||
                    (this.ShippingServiceCode != null &&
                    this.ShippingServiceCode.Equals(input.ShippingServiceCode))
                ) && 
                (
                    this.ShipTo == input.ShipTo ||
                    (this.ShipTo != null &&
                    this.ShipTo.Equals(input.ShipTo))
                ) && 
                (
                    this.ShipToReferenceId == input.ShipToReferenceId ||
                    (this.ShipToReferenceId != null &&
                    this.ShipToReferenceId.Equals(input.ShipToReferenceId))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ShippingCarrierCode != null)
                    hashCode = hashCode * 59 + this.ShippingCarrierCode.GetHashCode();
                if (this.ShippingServiceCode != null)
                    hashCode = hashCode * 59 + this.ShippingServiceCode.GetHashCode();
                if (this.ShipTo != null)
                    hashCode = hashCode * 59 + this.ShipTo.GetHashCode();
                if (this.ShipToReferenceId != null)
                    hashCode = hashCode * 59 + this.ShipToReferenceId.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
