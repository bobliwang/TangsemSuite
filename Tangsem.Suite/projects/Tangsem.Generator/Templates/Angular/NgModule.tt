<#@ template language="C#" inherits="Tangsem.Common.T4.T4TemplateBase" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>

<#@ import namespace="Tangsem.Common.Extensions" #>
<#@ import namespace="Tangsem.Generator.Templates" #>
<#@ import namespace="Tangsem.Generator.Settings" #>
// tslint:disable
import { HttpClient, HttpParams } from '@angular/common/http';
import { BrowserAnimationsModule } from '@angular/platform-browser/animations';

import { Observable } from 'rxjs';
import * as models from './models/models';

import { CommonModule } from '@angular/common';
import { ErrorHandler, ModuleWithProviders, NgModule } from '@angular/core';
import { FormsModule, ReactiveFormsModule } from '@angular/forms';

<#
	var matModules = new [] {
		"MatSnackBarModule",
		"MatStepperModule",
		"MatTabsModule",
		"MatFormFieldModule",
		"MatSelectModule",
		"MatTableModule",
		"MatSortModule",
		"MatButtonModule",
		"MatInputModule",
		"MatAutocompleteModule",
		"MatCheckboxModule",
		"MatIconModule",
		"MatPaginatorModule",
		"MatDatepickerModule",
		"MatNativeDateModule",
	};
#>

import {
	<#= string.Join(", ", matModules) #>
} from '@angular/material';
import { <#=Configuration.RepositoryName#>ApiService } from './services/api.service';

/************ AUTO GEN COMPONENTS **************/
<# foreach (var tableMetadata in this.TableMetadatas) { #>
import { <#= tableMetadata.EntityName #>FilterComponent } from './components/<#= tableMetadata.EntityName.Lf() #>/<#= tableMetadata.EntityName.Lf() #>-filter.component';
import { <#= tableMetadata.EntityName #>ListingComponent } from './components/<#= tableMetadata.EntityName.Lf() #>/<#= tableMetadata.EntityName.Lf() #>-listing.component';
import { <#= tableMetadata.EntityName #>EditorComponent, <#= tableMetadata.EntityName #>DetailsDialog, <#= tableMetadata.EntityName #>SheetComponent } from './components/<#= tableMetadata.EntityName.Lf() #>/<#= tableMetadata.EntityName.Lf() #>-editor.component';

<# } #>


import { <#= Configuration.RepositoryName #>RoutingModule } from './<#= Configuration.RepositoryName.Lf() #>-routing.module';

@NgModule({
	imports: [
		CommonModule,
		ReactiveFormsModule,
		FormsModule,
		BrowserAnimationsModule,
        <#= Configuration.RepositoryName #>RoutingModule,

		<#= string.Join(", ", matModules) #>,
	],
	declarations: [
		<# foreach (var tableMetadata in this.TableMetadatas) { #>

		<#= tableMetadata.EntityName #>FilterComponent,
		<#= tableMetadata.EntityName #>EditorComponent,
		<#= tableMetadata.EntityName #>ListingComponent,
    <#= tableMetadata.EntityName #>DetailsDialog,
    <#= tableMetadata.EntityName #>SheetComponent,

		<# } #>

	],
	
	providers: [
		<#=Configuration.RepositoryName#>ApiService
	],

    entryComponents: [
        <# foreach (var tableMetadata in this.TableMetadatas) { #>

        <#= tableMetadata.EntityName #>DetailsDialog,
				<#= tableMetadata.EntityName #>SheetComponent,

		<# } #>
    ],

	exports: [
		BrowserAnimationsModule,
		<#= string.Join(", ", matModules) #>,


		<# foreach (var tableMetadata in this.TableMetadatas) { #>

		<#= tableMetadata.EntityName #>FilterComponent,
		<#= tableMetadata.EntityName #>EditorComponent,
		<#= tableMetadata.EntityName #>ListingComponent,
    <#= tableMetadata.EntityName #>DetailsDialog,
    <#= tableMetadata.EntityName #>SheetComponent,

		<# } #>
	]

})
export class <#=Configuration.RepositoryName#>Module {
}
