<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>


<#@ import namespace="Tangsem.Common.Extensions" #>


import { Component, OnInit, ViewChild, Input, Output, EventEmitter } from '@angular/core';
import { MatPaginator, MatSort } from '@angular/material';
import { Observable } from 'rxjs/Observable';
import { catchError, map, startWith, switchMap } from 'rxjs/operators';
import * as models from '../../models/models';

@Component({
  selector: '<#= this.TableMetadata.EntityName.Lf() #>-filter',
  templateUrl: '<#= this.TableMetadata.EntityName.Lf() #>-filter.html',
})
export class <#= this.TableMetadata.EntityName #>FilterComponent {
	
	@Input()
	public filterModel: models.<#= this.TableMetadata.EntityName #>SearchParams;

	@Output('onSearch')
	public onSearch = new EventEmitter<models.<#= this.TableMetadata.EntityName #>SearchParams>();

	public ngOnInit() {
		this.filterModel = this.filterModel || <models.<#= this.TableMetadata.EntityName #>SearchParams> {};
	}

	public search() {
		this.onSearch.emit(this.filterModel);
	}

}