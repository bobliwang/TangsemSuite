// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 17.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace Tangsem.Generator.Templates.Enums
{
    using System.Linq;
    using System.Text;
    using System.Data;
    using System.Collections.Generic;
    using System.Data.SqlClient;
    using Tangsem.Generator;
    using Tangsem.Generator.Settings;
    using Tangsem.Common.DataAccess;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "C:\git-temp\tangsem.suite\Tangsem.Suite\projects\Tangsem.Generator\Templates\Enums\EnumsTemplate.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "17.0.0.0")]
    public partial class EnumsTemplate : Tangsem.Common.T4.T4TemplateBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public override string TransformText()
        {
            this.Write("\r\n");
            
            #line 12 "C:\git-temp\tangsem.suite\Tangsem.Suite\projects\Tangsem.Generator\Templates\Enums\EnumsTemplate.tt"

  var genConfig = this.EnumsGenConfiguration;




            
            #line default
            #line hidden
            this.Write(@"// --------------------------------------------------------------------------------------------------------------------
// <summary>
//   Defines the enums generated by T4.
// </summary>
// --------------------------------------------------------------------------------------------------------------------


using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Linq;
using System.Text;

namespace DocuFlow.Core.Domain
{
");
            
            #line 33 "C:\git-temp\tangsem.suite\Tangsem.Suite\projects\Tangsem.Generator\Templates\Enums\EnumsTemplate.tt"

  using(var conn = new SqlConnection(genConfig.ConnectionString))
  {
    conn.Open(); 
    var db = new Database(conn);
    
    // loop, code generation for each enum config.
    foreach(var cfg in genConfig.EnumConfigs)
    {
      var dataTable = cfg.TempDataTable = db.ExecuteDataTable(cfg.GetSql(), cfg.GetParameters());

            
            #line default
            #line hidden
            this.Write("  public enum ");
            
            #line 44 "C:\git-temp\tangsem.suite\Tangsem.Suite\projects\Tangsem.Generator\Templates\Enums\EnumsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(cfg.EnumClassName));
            
            #line default
            #line hidden
            this.Write(" {\r\n");
            
            #line 45 "C:\git-temp\tangsem.suite\Tangsem.Suite\projects\Tangsem.Generator\Templates\Enums\EnumsTemplate.tt"

      var rows = dataTable.Rows.Cast<DataRow>().Where(x => cfg.ParentMatchFlag(x));  
      foreach(var row in rows ) { 
            
            #line default
            #line hidden
            this.Write("    ");
            
            #line 48 "C:\git-temp\tangsem.suite\Tangsem.Suite\projects\Tangsem.Generator\Templates\Enums\EnumsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(cfg.GetEnumName(row)));
            
            #line default
            #line hidden
            this.Write(" = ");
            
            #line 48 "C:\git-temp\tangsem.suite\Tangsem.Suite\projects\Tangsem.Generator\Templates\Enums\EnumsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(cfg.IsFlags ? cfg.GetFlagLiteral(row): row[cfg.ValueField]));
            
            #line default
            #line hidden
            this.Write(",\r\n\r\n");
            
            #line 50 "C:\git-temp\tangsem.suite\Tangsem.Suite\projects\Tangsem.Generator\Templates\Enums\EnumsTemplate.tt"
 } /* end of foreach rows */ 
            
            #line default
            #line hidden
            this.Write("   \r\n  }\r\n\r\n  ");
            
            #line 54 "C:\git-temp\tangsem.suite\Tangsem.Suite\projects\Tangsem.Generator\Templates\Enums\EnumsTemplate.tt"
 if (cfg.IsFlags) { 
            
            #line default
            #line hidden
            this.Write("\r\n  // Gen flags ");
            
            #line 56 "C:\git-temp\tangsem.suite\Tangsem.Suite\projects\Tangsem.Generator\Templates\Enums\EnumsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(cfg.EnumClassName));
            
            #line default
            #line hidden
            this.Write("\r\n  public enum ");
            
            #line 57 "C:\git-temp\tangsem.suite\Tangsem.Suite\projects\Tangsem.Generator\Templates\Enums\EnumsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(cfg.EnumClassName));
            
            #line default
            #line hidden
            this.Write("Index {\r\n  \r\n  ");
            
            #line 59 "C:\git-temp\tangsem.suite\Tangsem.Suite\projects\Tangsem.Generator\Templates\Enums\EnumsTemplate.tt"

      foreach(var row in rows) { 
            
            #line default
            #line hidden
            this.Write("\r\n    ");
            
            #line 62 "C:\git-temp\tangsem.suite\Tangsem.Suite\projects\Tangsem.Generator\Templates\Enums\EnumsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(cfg.GetEnumName(row)));
            
            #line default
            #line hidden
            this.Write(" = ");
            
            #line 62 "C:\git-temp\tangsem.suite\Tangsem.Suite\projects\Tangsem.Generator\Templates\Enums\EnumsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(row[cfg.ValueField]));
            
            #line default
            #line hidden
            this.Write(",\r\n\r\n");
            
            #line 64 "C:\git-temp\tangsem.suite\Tangsem.Suite\projects\Tangsem.Generator\Templates\Enums\EnumsTemplate.tt"
 } /* end of foreach rows */ 
            
            #line default
            #line hidden
            this.Write("\r\n  }\r\n\r\n  ");
            
            #line 68 "C:\git-temp\tangsem.suite\Tangsem.Suite\projects\Tangsem.Generator\Templates\Enums\EnumsTemplate.tt"
 } /* end of cfg.GenFlags */ 
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 70 "C:\git-temp\tangsem.suite\Tangsem.Suite\projects\Tangsem.Generator\Templates\Enums\EnumsTemplate.tt"

    }    
  }

            
            #line default
            #line hidden
            this.Write("}\r\n");
            return this.GenerationEnvironment.ToString();
        }
    }
    
    #line default
    #line hidden
}
