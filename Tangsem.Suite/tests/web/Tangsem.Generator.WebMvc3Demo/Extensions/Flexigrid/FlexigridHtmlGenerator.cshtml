@* Generator: Template *@

@using Tangsem.Common.Extensions
@using Tangsem.Generator.WebMvc3Demo.Extensions.Flexigrid

@functions{
  public FlexigridWrapper FlexigridWrapper { get; set; }
  public FlexigridHtmlOptions FlexigridHtmlOptions { get; set; }
}

@{
  var grid = this.FlexigridWrapper.WebGrid;

  var options = this.FlexigridHtmlOptions;

  var tableId = ((object)options.HtmlAttributes).GetPropertyValue("id") as string;

  if (tableId == null)
  {
    throw new Exception("TableId is required in HtmlAttributes!");
  }

  var containerId = this.FlexigridWrapper.ContainerId;
  var request = this.FlexigridWrapper.WebPageBase.Request;
}

@grid.GetHtml(
    options.TableStyle,
    options.HeaderStyle,
    options.FooterStyle,
    options.RowStyle,
    options.AlternatingRowStyle,
    options.SelectedRowStyle,
    options.Caption,
    options.DisplayHeader,
    options.FillEmptyRows,
    options.EmptyRowCellValue,
    options.Columns,
    options.Exclusions,
    options.Mode,
    options.FirstText,
    options.PreviousText,
    options.NextText,
    options.LastText,
    options.NumericLinksCount,
    options.HtmlAttributes)


<script language="javascript" type="text/javascript">
  $(function () {
    
    @{
      var i = 0;
      foreach (var col in options.Columns)
      {<text>
        $('#@(tableId) th:nth-child(@(++i))').attr('width', @(col.HeaderWidth));
        $('#@(tableId) th:nth-child(@(i))').attr('align', '@(col.Align.ToString().ToLower())');
        $('#@(tableId) th:nth-child(@(i))').attr('valign', '@(col.VAlign.ToString().ToLower())');
      </text>}

      var columns = options.Columns.ToList();
      var sortedColumn = columns.FirstOrDefault(x => x.ColumnName == this.FlexigridWrapper.SortBy);
      var colIndex = 0;
      if (sortedColumn != null)
      {
        colIndex = columns.IndexOf(sortedColumn) + 1;
        <text>$('#@(tableId) th:nth-child(@(colIndex))').addClass('sorted')</text>
      }
    }
    
    
    $('#@(tableId) th').css('background-color', 'transparent');
    $('#@(tableId) th').css('color', '#000');    
    $('#@(tableId) th a').css('color', '#000');    
    $('#@(tableId) th a').css('text-decoration', 'none');
    @*$('#@(tableId) th').css('font-weight', 'bold');*@
    $('#@(tableId) tfoot').remove();
    
    @{var searchSettings = options.FlexigridSearchSettings;}
    $('#@(tableId)').flexigrid({
      width:     @(options.FlexiWidth),
      height:    @(options.FlexiHeight),
      title:    '@(options.Title)',
      usepager: true,
      useRp: false,
      total: @(grid.TotalRowCount),
      rp: @(grid.RowsPerPage),
      page: @(grid.PageIndex)
      @(options.IsUsingSearchSettings ? "," + searchSettings.SearchItemsJson : string.Empty)@*render search items*@
    });
    
    var ths = $('#@(containerId) .hDivBox th');
    ths.each(function(idx) {
      var self = $(this);
      self.find('div').click(
        function(){
          $.pjax({url: self.find('a').attr('href'), container:'#@(containerId)'});
          return false;// prevent the link to issue another query.
        }
      );
    });
    
    @{
      if (sortedColumn != null)
      {
        var sortDir = this.FlexigridWrapper.SortDir;
        var sortDirClass = "DESC".Equals(sortDir, StringComparison.CurrentCultureIgnoreCase) ? "sdesc" : "sasc";

        <text>
          var sortedDiv = $('#@(containerId) .hDivBox th:nth-child(@(colIndex)) div');
          sortedDiv.addClass('@(sortDirClass)');
        </text>  
      }

      var pageUrlTemplate = this.FlexigridWrapper.FirstPageUrl;
    }
    
    $('#@(containerId) .pcontrol input').val(@(grid.PageIndex + 1));
    $('#@(containerId) .pcontrol span').html('@(grid.PageCount)');
    $('#@(containerId) .pPageStat').html('Displaying @(grid.PageIndex * grid.RowsPerPage + 1) to @(Math.Min((grid.PageIndex+1) * grid.RowsPerPage, grid.TotalRowCount)) of @(grid.TotalRowCount) items.');
    
    @* goPage function *@
    var goPage = function() {
      var template = '@(pageUrlTemplate)';
      var url = template.replace('@(grid.PageFieldName)=1', '@(grid.PageFieldName)=' + $('.pcontrol input').val());
      $.pjax( {url: url, container: '#@(containerId)' });
    };
    
    $('#@(containerId) .pcontrol input').change(goPage);
    $('#@(containerId) .pcontrol input').keyup(goPage);
    $('#@(containerId) .pReload').click(goPage);
    
    @* Number Only *@
    $('#@(containerId) .pcontrol input').keypress(function (evt) {
      var e = window.event || evt; // for trans-browser compatibility  
      var charCode = e.which || e.keyCode;  
      if ((charCode > 47 && charCode < 58) || charCode == 8){
        return true;
      }  
      return false;
    });
    
    $('#@(containerId) .pFirst').click(function(){$.pjax({url:'@(this.FlexigridWrapper.FirstPageUrl)', container:'#@(containerId)'});});
    $('#@(containerId) .pLast').click(function(){$.pjax({url:'@(this.FlexigridWrapper.LastPageUrl)', container:'#@(containerId)'});});
    $('#@(containerId) .pPrev').click(function(){$.pjax({url:'@(this.FlexigridWrapper.PrevPageUrl)', container:'#@(containerId)'});});
    $('#@(containerId) .pNext').click(function(){$.pjax({url:'@(this.FlexigridWrapper.NextPageUrl)', container:'#@(containerId)'});});
    
    @*Search Box - Use pjax to do search here..*@
    @if (options.IsUsingSearchSettings)
    {
    <text>
      var searchBox = $('#@(containerId) input[name="q"]');
      var qtypeSel = $('#@(containerId) select[name="qtype"]');
      if (searchBox.length > 0) {
        searchBox.keypress(function(evt){
          var e = window.event || evt; // for trans-browser compatibility  
          var charCode = e.which || e.keyCode;
          if (charCode == 13) {
            @*once it is return key..*@
            $.pjax({url:'@(options.FlexigridSearchSettings.Url)', container:'#@(containerId)', data: {'@(searchSettings.SearchFieldParamName)': qtypeSel.val(), '@(searchSettings.SearchValueParamName)': searchBox.val()}});
          }
        });  
      }
    </text>
      var currentQ = request[searchSettings.SearchValueParamName];
      var currentQtype = request[searchSettings.SearchFieldParamName];
      if (string.IsNullOrEmpty(currentQtype))
      {
        var defaultSearchItem = searchSettings.SearchItems.LastOrDefault(x => x.IsDefault);
        if (defaultSearchItem != null)
        {
          currentQtype = defaultSearchItem.Name;
        }
      }

      if (!string.IsNullOrEmpty(currentQ))
      {<text>
        searchBox.val('@(currentQ)');
      </text>}

      if (!string.IsNullOrEmpty(currentQtype))
      {<text>
        qtypeSel.val('@(currentQtype)');
      </text>}
    }

    @if (options.FooterFormat != null)
    {
      var newFooter = string.Format("<tfoot><tr><td colspan=\"{0}\">{1}</td></tr></tfoot>"
        , options.Columns.Count()
        , Convert.ToString(options.FooterFormat(null)));

      newFooter = newFooter.Replace("'", "\\'").Replace(Environment.NewLine, "");

      <text>
      $('#@(tableId)').append('" + @(newFooter) + "');
      </text>
    }
    
  });
</script>