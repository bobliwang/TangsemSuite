@using System.Dynamic
@using System.Linq.Expressions
@using System.Web.Script.Serialization
@using Tangsem.Common.Extensions
@using Tangsem.Generator.WebMvc3Demo.Common.Domain.Entities
@using Tangsem.Generator.WebMvc3Demo.Extensions.Flexigrid
@using Tangsem.Generator.WebMvc3Demo.ViewModels
@using Tangsem.Generator.WebMvc3Demo.Extensions
@using Tangsem.Web.Mvc.Extensions

@model IQueryable<Tangsem.Generator.WebMvc3Demo.Common.Domain.Entities.Category>

@{
  var flexigridWrapper = new FlexigridWrapper("myGrid", fieldNamePrefix: "_devices_");
  flexigridWrapper.Bind(this, this.Model);
}



@{
  var htmlAttributes = new { id = "gridTbl", name = "gridTbl" };
}

@flexigridWrapper.GetFlexigridHtml(
  flexiWidth: 650,
  flexiHeight: 280,
  title: "Categories",
  
  columns: flexigridWrapper.Columns(
              flexigridWrapper.FlexigridColumn(columnName: "Id", header: "Id", format: @<text>@item.Id</text>, canSort: true, headerWidth: 100),
              flexigridWrapper.FlexigridColumn(columnName: "Name", header: "Name", format: @<text>@item.Name</text>, canSort: true, headerWidth: 100),
              flexigridWrapper.FlexigridColumn(columnName: "ShortDescription", header: "Short Description", format: @<text>@item.ShortDescription</text>, canSort: true, headerWidth: 300),
              flexigridWrapper.FlexigridColumn(columnName: "", header: "Action", format: @<text><a href="javascript:deleteCat(@item.Id)">Delete</a></text>, canSort: false, headerWidth: 100)
          ),
  searchSettings: new SearchSettings (
                      url: Url.Action(MVC.Category.SearchCategories()),
                      searchItems: new [] {
                                          new FlexigridSearchItem{Display = "Name", Name = "Name", IsDefault= true},
                                          new FlexigridSearchItem{Display = "Short Description", Name = "ShortDescription",},
                                   }
                    ),
  htmlAttributes: htmlAttributes // only merged2 approach works for now.
)